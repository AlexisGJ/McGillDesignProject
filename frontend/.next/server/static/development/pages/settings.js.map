{"version":3,"file":"static/development/pages/settings.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/AppbarComponent.js","webpack:///./components/SnackbarComponent.js","webpack:///./pages/settings.js","webpack:///external \"@material-ui/core/AppBar\"","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@material-ui/core/CircularProgress\"","webpack:///external \"@material-ui/core/Divider\"","webpack:///external \"@material-ui/core/ExpansionPanel\"","webpack:///external \"@material-ui/core/ExpansionPanelActions\"","webpack:///external \"@material-ui/core/ExpansionPanelDetails\"","webpack:///external \"@material-ui/core/ExpansionPanelSummary\"","webpack:///external \"@material-ui/core/FormControlLabel\"","webpack:///external \"@material-ui/core/Grid\"","webpack:///external \"@material-ui/core/Icon\"","webpack:///external \"@material-ui/core/IconButton\"","webpack:///external \"@material-ui/core/Paper\"","webpack:///external \"@material-ui/core/Snackbar\"","webpack:///external \"@material-ui/core/SnackbarContent\"","webpack:///external \"@material-ui/core/Switch\"","webpack:///external \"@material-ui/core/TextField\"","webpack:///external \"@material-ui/core/Toolbar\"","webpack:///external \"@material-ui/core/Typography\"","webpack:///external \"@material-ui/core/colors/amber\"","webpack:///external \"@material-ui/core/colors/green\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/icons/Add\"","webpack:///external \"@material-ui/icons/CheckCircle\"","webpack:///external \"@material-ui/icons/Close\"","webpack:///external \"@material-ui/icons/Error\"","webpack:///external \"@material-ui/icons/ExpandMore\"","webpack:///external \"@material-ui/icons/Home\"","webpack:///external \"@material-ui/icons/Info\"","webpack:///external \"@material-ui/icons/Settings\"","webpack:///external \"@material-ui/icons/Warning\"","webpack:///external \"classnames\"","webpack:///external \"moment\"","webpack:///external \"next/link\"","webpack:///external \"prop-types\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from 'next/link'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport moment from 'moment';\n\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  progress: {\n    marginLeft: '20px'\n  }\n};\n\nclass ButtonAppBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      time: moment().format('HH:mm')\n    };\n  }\n\n  displayTime(){\n    this.setState({\n        time: moment().format('HH:mm')\n    });\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n        this.displayTime();\n    }, 5000);\n  }\n\n\n  componentWillReceiveProps() {\n    this.setState({\n      loading: this.props.loading\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Link as={`/`} href={`/`}>\n              <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                <HomeIcon />\n              </IconButton>\n            </Link>\n            <Typography variant=\"h6\" color=\"inherit\">\n              <b>Camp Carowanis</b> <span style={{fontWeight: 'lighter', color: 'rgba(255,255,255,0.8)', fontSize: '0.8em'}}>Station de Supervision</span>\n            </Typography>\n            {this.state.loading && <CircularProgress className={classes.progress} color=\"secondary\" size={20} />}\n            <Typography className={classes.grow}></Typography>\n            \n            <Typography variant=\"h6\" color=\"inherit\" style={{marginRight: '10px'}}>{this.state.time}</Typography>\n            <Link as={`/settings`} href={`/settings`}>\n              <IconButton color=\"inherit\">\n                  <SettingsIcon />\n              </IconButton>\n            </Link>\n            {/* <Button color=\"inherit\">DÃ©connexion</Button> */}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n  \n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles)(MySnackbarContent);\n\nexport default MySnackbarContentWrapper;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Link from 'next/link'\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport '../static/css/main_custom.css'\n\nimport SnackbarComponent from '../components/SnackbarComponent';\nimport AppbarComponent from '../components/AppbarComponent';\n\n\nconst API_URL = (process.env.NODE_ENV && process.env.NODE_ENV === 'production') ? \"https://camp-carowanis-api.herokuapp.com\" : \"http://localhost:1234\";\n\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: { main: '#455a64' },\n      secondary: { main: '#ffffff' },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        padding: 20,\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n      heading: {\n        fontSize: theme.typography.pxToRem(15),\n        textAlign: 'left',\n      },\n      secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n      },\n      icon: {\n        verticalAlign: 'bottom',\n        height: 20,\n        width: 20,\n      },\n      details: {\n        alignItems: 'center',\n      },\n      column: {\n        flexBasis: '33.33%',\n      },\n      helper: {\n        borderLeft: `2px solid ${theme.palette.divider}`,\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n      },\n      link: {\n        color: theme.palette.primary.main,\n        textDecoration: 'none',\n        '&:hover': {\n          textDecoration: 'underline',\n        },\n      },\n\n      textField: {\n        width: '95%',\n      },\n      close: {\n        padding: theme.spacing.unit / 2,\n      },\n      message: {\n        display: 'flex',\n        alignItems: 'center',\n      },\n      snackbarContainer: {\n        minWidth: 500,\n      },\n      snackbarMargin: {\n        margin: theme.spacing.unit,\n      },\n\n      childActiveTrue: {\n        color: 'green',\n      },\n      childActiveFalse: {\n        color: 'red',\n      },\n\n      addPanel: {\n        background: '#455a64',\n        color: '#fff'\n      },\n  });\n  \n\nclass Settings extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            expanded: null,\n            snackbarOpen: false,\n            snackbarMessage: \"\",\n            snackbarVariant: \"info\",\n            data: [],\n            newChild: {name: \"\", collection_id: \"\", location: \"Tente #\", range_min: 4, range_max: 8, active: true},\n        };\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData = () => {\n        fetch(API_URL + \"/api/child/all\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    data: result.sort((a, b) => a.name.localeCompare(b.name))\n                });\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        )\n    }\n\n    showSnackbarMessage = (message, variant) => {\n        this.setState({ \n            snackbarOpen: true,\n            snackbarMessage: message,\n            snackbarVariant: variant\n        });\n    }\n    \n    snackbarClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        this.setState({ snackbarOpen: false });\n    };\n\n    handleClose = panel => (event, expanded) => {\n        this.setState({\n            expanded: expanded ? panel : false,\n        });\n    };\n\n    handleChange = (key, field, e) => {\n\n        var tempData = this.state.data\n        var newValue = e.target.value\n        if (field == 'active') {\n            newValue = !tempData[key].active;\n        }\n        tempData[key][field] = newValue\n\n        this.setState({\n            data: tempData\n        });\n        \n    }\n\n    handleChangeNewChild = (field, e) => {\n        var tempData = this.state.newChild\n        var newValue = e.target.value\n        if (field == 'active') {\n            newValue = !tempData.active;\n        }\n        tempData[field] = newValue\n\n        this.setState({\n            newChild: tempData\n        });\n    }\n\n    updateChild = (row) => {\n        fetch(API_URL + '/api/child/' + row._id + '/update', {\n            method: 'post',\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(row)\n        })\n        .then(\n            response => {\n                if (response.status == 200) {\n                    this.showSnackbarMessage(\"EnregistrÃ© avec succÃ¨s\", \"success\");\n                    this.getData();\n                } else {\n                    this.showSnackbarMessage(\"Il y a eu une erreur lors de l'enregistrement\", \"error\");\n                }\n            }\n        );\n        console.log(row);\n    }\n\n    createChild = () => {\n        fetch(API_URL + '/api/child/create', {\n            method: 'post',\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(this.state.newChild)\n        })\n        .then(\n            response => {\n                if (response.status == 200) {\n                    this.showSnackbarMessage(\"EnregistrÃ© avec succÃ¨s\", \"success\");\n                    this.setState({\n                        newChild: {name: \"\", collection_id: \"\", location: \"Tente #\", range_min: 4, range_max: 8, active: true},\n                    });\n                    this.getData();\n                } else {\n                    this.showSnackbarMessage(\"Il y a eu une erreur lors de l'enregistrement\", \"error\");\n                }\n            }\n        );\n    }\n\n    deleteChild = (row) => {\n        fetch(API_URL + '/api/child/' + row._id + '/delete', {\n            method: 'post',\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(row)\n        })\n        .then(\n            response => {\n                if (response.status == 200) {\n                    this.showSnackbarMessage(\"SupprimÃ© avec succÃ¨s\", \"success\");\n                    this.getData();\n                } else {\n                    this.showSnackbarMessage(\"Il y a eu une erreur lors de la suppression\", \"error\");\n                }\n            }\n        );\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { error, isLoaded, data, expanded, newChild } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return(\n                <div>\n                    <MuiThemeProvider theme={theme}>\n                        <AppbarComponent loading={false}/>\n\n                        <Grid container spacing={24} className={classes.root}>\n                            <Grid item xs={2}></Grid>\n                            <Grid item xs={8}>\n                                <Paper className={classes.paper} elevation={1}>\n\n                                <ExpansionPanel key={'create_child'} expanded={expanded === 'create_child'} onChange={this.handleClose('create_child')}>\n                                    <ExpansionPanelSummary expandIcon={<AddIcon color=\"secondary\" />} className={classes.addPanel}>\n                                        <div className={classes.column}>\n                                            <Typography className={classes.heading} style={{color: '#fff'}}>Ajouter une nouvelle entrÃ©e</Typography>\n                                        </div>\n                                    </ExpansionPanelSummary>\n                                    <ExpansionPanelDetails className={classes.details}>\n                                        <Grid container>\n                                            <Grid item xs={4}>\n                                                <TextField\n                                                    id=\"outlined-name-input\"\n                                                    label=\"Nom\"\n                                                    className={classes.textField}\n                                                    type=\"text\"\n                                                    name=\"name\"\n                                                    margin=\"normal\"\n                                                    variant=\"outlined\"\n                                                    onChange={(e) => this.handleChangeNewChild('name', e)}\n                                                    value={newChild.name}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={4}>\n                                                <TextField\n                                                    id=\"outlined-sensorId-input\"\n                                                    label=\"ID du capteur\"\n                                                    className={classes.textField}\n                                                    type=\"text\"\n                                                    name=\"sensorId\"\n                                                    margin=\"normal\"\n                                                    variant=\"outlined\"\n                                                    onChange={(e) => this.handleChangeNewChild('collection_id', e)}\n                                                    value={newChild.collection_id}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={4}>\n                                                <TextField\n                                                    id=\"outlined-location-input\"\n                                                    label=\"Location\"\n                                                    className={classes.textField}\n                                                    type=\"text\"\n                                                    name=\"location\"\n                                                    margin=\"normal\"\n                                                    variant=\"outlined\"\n                                                    onChange={(e) => this.handleChangeNewChild('location', e)}\n                                                    value={newChild.location}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={4}></Grid>\n                                            <Grid item xs={4}>\n                                                <TextField\n                                                    id=\"outlined-rangemin-input\"\n                                                    label=\"Range minimum\"\n                                                    className={classes.textField}\n                                                    type=\"number\"\n                                                    name=\"rangemin\"\n                                                    margin=\"normal\"\n                                                    variant=\"outlined\"\n                                                    onChange={(e) => this.handleChangeNewChild('range_min', e)}\n                                                    value={newChild.range_min}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={4}>\n                                                <TextField\n                                                    id=\"outlined-rangemax-input\"\n                                                    label=\"Range maximal\"\n                                                    className={classes.textField}\n                                                    type=\"number\"\n                                                    name=\"rangemin\"\n                                                    margin=\"normal\"\n                                                    variant=\"outlined\"\n                                                    onChange={(e) => this.handleChangeNewChild('range_max', e)}\n                                                    value={newChild.range_max}\n                                                />\n                                            </Grid>\n\n                                            <Grid item xs={4}></Grid>\n                                            <Grid item xs={4}></Grid>\n                                            <Grid item xs={4}>\n                                                <FormControlLabel\n                                                    control={\n                                                    <Switch\n                                                        checked={newChild.active}\n                                                        onChange={(e) => this.handleChangeNewChild('active', e)}\n                                                        color=\"primary\"\n                                                    />\n                                                    }\n                                                    label=\"Actif\"\n                                                />\n                                            </Grid>\n                                            \n                                        </Grid>\n                                        \n                                    </ExpansionPanelDetails>\n                                    <Divider />\n                                    <ExpansionPanelActions>\n                                        {/* <Button size=\"small\" onClick={this.handleClose(row._id)}>Cancel</Button> */}\n                                        <Button size=\"small\" color=\"primary\" onClick={(e) => (this.createChild(), this.handleClose('create_child'))}>Save</Button>\n                                    </ExpansionPanelActions>\n                                </ExpansionPanel>\n\n                                \n\n\n\n                                {data.map((row, key) =>\n                                    <ExpansionPanel key={row._id} expanded={expanded === row._id} onChange={this.handleClose(row._id)}>\n                                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                            <div className={classes.column}>\n                                                <Typography className={classes.heading}><span className={row.active ? classes.childActiveTrue : classes.childActiveFalse}>&#9679;</span> {row.name}</Typography>\n                                            </div>\n                                            <div className={classes.column}>\n                                                <Typography className={classes.secondaryHeading}>{row.location}</Typography>\n                                            </div>\n                                        </ExpansionPanelSummary>\n                                        <ExpansionPanelDetails className={classes.details}>\n                                            <Grid container>\n                                                <Grid item xs={4}>\n                                                    <TextField\n                                                        id=\"outlined-name-input\"\n                                                        label=\"Nom\"\n                                                        className={classes.textField}\n                                                        type=\"text\"\n                                                        name=\"name\"\n                                                        margin=\"normal\"\n                                                        variant=\"outlined\"\n                                                        onChange={(e) => this.handleChange(key, 'name', e)}\n                                                        value={row.name}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={4}>\n                                                    <TextField\n                                                        id=\"outlined-sensorId-input\"\n                                                        label=\"ID du capteur\"\n                                                        className={classes.textField}\n                                                        type=\"text\"\n                                                        name=\"sensorId\"\n                                                        margin=\"normal\"\n                                                        variant=\"outlined\"\n                                                        onChange={(e) => this.handleChange(key, 'collection_id', e)}\n                                                        value={row.collection_id}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={4}>\n                                                    <TextField\n                                                        id=\"outlined-location-input\"\n                                                        label=\"Location\"\n                                                        className={classes.textField}\n                                                        type=\"text\"\n                                                        name=\"location\"\n                                                        margin=\"normal\"\n                                                        variant=\"outlined\"\n                                                        onChange={(e) => this.handleChange(key, 'location', e)}\n                                                        value={row.location}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={4}></Grid>\n                                                <Grid item xs={4}>\n                                                    <TextField\n                                                        id=\"outlined-rangemin-input\"\n                                                        label=\"Range minimum\"\n                                                        className={classes.textField}\n                                                        type=\"number\"\n                                                        name=\"rangemin\"\n                                                        margin=\"normal\"\n                                                        variant=\"outlined\"\n                                                        onChange={(e) => this.handleChange(key, 'range_min', e)}\n                                                        value={row.range_min}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={4}>\n                                                    <TextField\n                                                        id=\"outlined-rangemax-input\"\n                                                        label=\"Range maximal\"\n                                                        className={classes.textField}\n                                                        type=\"number\"\n                                                        name=\"rangemin\"\n                                                        margin=\"normal\"\n                                                        variant=\"outlined\"\n                                                        onChange={(e) => this.handleChange(key, 'range_max', e)}\n                                                        value={row.range_max}\n                                                    />\n                                                </Grid>\n\n                                                <Grid item xs={4}></Grid>\n                                                <Grid item xs={4}></Grid>\n                                                <Grid item xs={4}>\n                                                    <FormControlLabel\n                                                        control={\n                                                        <Switch\n                                                            checked={row.active}\n                                                            onChange={(e) => this.handleChange(key, 'active', e)}\n                                                            color=\"primary\"\n                                                        />\n                                                        }\n                                                        label=\"Actif\"\n                                                    />\n                                                </Grid>\n                                                \n                                            </Grid>\n                                            \n                                        </ExpansionPanelDetails>\n                                        <Divider />\n                                        <ExpansionPanelActions>\n                                            <Button size=\"small\" onClick={(e) => (this.deleteChild(row), this.handleClose(row._id))}>Delete</Button>\n                                            <Button size=\"small\" color=\"primary\" onClick={(e) => (this.updateChild(row), this.handleClose(row._id))}>Save</Button>\n                                        </ExpansionPanelActions>\n                                    </ExpansionPanel>\n                                )}\n\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={2}></Grid>\n                        </Grid>\n\n\n                        <Snackbar\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            }}\n                            open={this.state.snackbarOpen}\n                            autoHideDuration={6000}\n                            onClose={this.snackbarClose}\n                            className={classes.snackbarContainer}\n                            >\n\n                            <SnackbarComponent\n                                variant={this.state.snackbarVariant}\n                                className={classes.snackbarMargin}\n                                message={this.state.snackbarMessage}\n                                />\n\n                        </Snackbar>\n                    </MuiThemeProvider>\n                </div>\n\n            );\n        }\n    }\n}\n\nSettings.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst SettingsWrapped = withStyles(styles)(Settings);\n\nexport default SettingsWrapped;","module.exports = require(\"@material-ui/core/AppBar\");","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@material-ui/core/CircularProgress\");","module.exports = require(\"@material-ui/core/Divider\");","module.exports = require(\"@material-ui/core/ExpansionPanel\");","module.exports = require(\"@material-ui/core/ExpansionPanelActions\");","module.exports = require(\"@material-ui/core/ExpansionPanelDetails\");","module.exports = require(\"@material-ui/core/ExpansionPanelSummary\");","module.exports = require(\"@material-ui/core/FormControlLabel\");","module.exports = require(\"@material-ui/core/Grid\");","module.exports = require(\"@material-ui/core/Icon\");","module.exports = require(\"@material-ui/core/IconButton\");","module.exports = require(\"@material-ui/core/Paper\");","module.exports = require(\"@material-ui/core/Snackbar\");","module.exports = require(\"@material-ui/core/SnackbarContent\");","module.exports = require(\"@material-ui/core/Switch\");","module.exports = require(\"@material-ui/core/TextField\");","module.exports = require(\"@material-ui/core/Toolbar\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/colors/amber\");","module.exports = require(\"@material-ui/core/colors/green\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/icons/Add\");","module.exports = require(\"@material-ui/icons/CheckCircle\");","module.exports = require(\"@material-ui/icons/Close\");","module.exports = require(\"@material-ui/icons/Error\");","module.exports = require(\"@material-ui/icons/ExpandMore\");","module.exports = require(\"@material-ui/icons/Home\");","module.exports = require(\"@material-ui/icons/Info\");","module.exports = require(\"@material-ui/icons/Settings\");","module.exports = require(\"@material-ui/icons/Warning\");","module.exports = require(\"classnames\");","module.exports = require(\"moment\");","module.exports = require(\"next/link\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");"],"mappingsxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AACA;AAeA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AA1DA;AACA;AA6DA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AApBA;AAAA;AACA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxlEA;AAAA;AACA;AAwEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmBA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AAvCA;AAyCA;AACA;AACA;AACA;AAHA;AAKA;AACA;AA/CA;AAiDA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAvDA;AAwDA;AACA;AACA;AADA;AAGA;AAJA;AACA;AAzDA;AAgEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAIA;AACA;AA5EA;AA8EA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAzFA;AA2FA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA5GA;AA8GA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAjIA;AAmIA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAFA;AAYA;AACA;;;AACA;AACA;AACA;;;AAoIA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApGA;AA2GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;;;;AAvZA;AACA;AAyZA;AACA;AADA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrhBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}