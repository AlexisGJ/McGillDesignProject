{"version":3,"file":"static/webpack/static/development/pages/index.js.1c15c217c0e72f979357.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Link from 'next/link'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport red from '@material-ui/core/colors/red';\nimport GoogleLogin from 'react-google-login';\n\nimport '../static/css/main_custom.css'\n\nimport TableComponent from '../components/TableComponent'\nimport SnackbarComponent from '../components/SnackbarComponent';\nimport AppbarComponent from '../components/AppbarComponent';\n\n\nconst Post = props => (\n    <li>\n        <Link as={`/${props.slug}`} href={`/post?title=${props.title}`}>\n            <a>{props.title}</a>\n        </Link>\n    </li>\n)\n\nconst styles = theme => ({\n    root: {\n      padding: 20\n    }\n});\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: { main: '#455a64' }, // Purple and green play nicely together.\n      secondary: { main: '#11cb5f' }, // This is just green.A700 as hex.\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n  \n\nclass Index extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: [],\n            dataFirstHalf: [],\n            dataSecondHalf: []\n        };\n    }\n\n    componentDidMount() {\n        this.timer = setInterval(()=> this.getData(), 1000)\n    }\n\n    async getData() {\n        console.log(\"getData started!\");\n        fetch(\"http://localhost:1234/api/reading/allActiveChildren\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                console.log(result);\n                this.setState({\n                    isLoaded: true,\n                    data: result,\n                    dataFirstHalf: result.splice(0, Math.ceil(result.length / 2)),\n                    dataSecondHalf: result,\n                });\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        )\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { error, isLoaded, dataFirstHalf, dataSecondHalf } = this.state;\n\n        const responseGoogle = (response) => {\n            console.log(response);\n        }\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return(\n                <div>\n                    <MuiThemeProvider theme={theme}>\n                        <AppbarComponent />\n                        {/* <h2>My blog</h2>\n                        <ul>\n                        <li>\n                            <Post slug=\"post/yet-another-post\" title=\"Yet another post\" />\n                            <Post slug=\"post/second-post\" title=\"Second post\" />\n                            <Post slug=\"post/hello-world\" title=\"Hello, world!\" />\n                        </li>\n                        </ul> */}\n\n                        <GoogleLogin\n                                clientId=\"379738068740-tgguug359j7mqrm0vqledsf9si5u7ssp.apps.googleusercontent.com\"\n                                buttonText=\"Login to google\"\n                                onSuccess={responseGoogle}\n                                onFailure={responseGoogle}\n                                />\n                        \n                        <Grid container spacing={8} className={classes.root}>\n                            <Grid item xs={6}>\n                                <div>\n                                    <TableComponent data={dataFirstHalf}/>\n                                </div>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <div>\n                                    <TableComponent data={dataSecondHalf}/>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </MuiThemeProvider>\n                </div>\n    \n            );\n        }\n\n    }\n}\n\nIndex.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst IndexWrapped = withStyles(styles)(Index);\n\nexport default IndexWrapped;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAOA;AAAA;AACA;AACA;AADA;AADA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAHA;AAIA;AACA;AADA;AALA;AACA;AAUA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;AAGA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;;;;;;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;;;;AA9FA;AACA;AAgGA;AACA;AADA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}