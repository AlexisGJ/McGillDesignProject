{"version":3,"file":"static/webpack/static/development/pages/index.js.7ba0c5b367579eedd865.hot-update.js","sources":["webpack:///./components/TableComponent.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport ModalComponent from '../components/ModalComponent'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    // minWidth: 700,\n  },\n  tableRow: {\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200],\n    },\n  },\n  \n});\n\nlet id = 0;\nfunction createData(name, sensor, sgv, battery, lastTime) {\n  id += 1;\n  return { id, name, sensor, sgv, battery, lastTime };\n}\n\nconst rows = [\n  createData('Ege Ozer', 'Dexcom G5', 2.4, 24, '2019-01-29 11:30:12'),\n  createData('Rami Djema', 'FreeStyle Libre', 4.4, 51, '2019-01-29 14:58:12'),\n  createData('Alexis Giguere', 'Dexcom G5', 5.2, 12, '2019-01-29 09:03:12'),\n  createData('Ahmad Prof', 'Dexcom G5', 3.0, 87, '2019-01-29 17:45:12'),\n];\n\nfunction convertData(data) {\n  for(var i=0; i<data.length; i++) {\n    data[i]['latestReading'] = data[i]['readings'][0];\n  }\n  return data;\n}\n\nclass SimpleTable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        error: null,\n        isLoaded: false,\n        data: props.data,\n        open: false,\n        row: {name: \"\", sensor: \"\"},\n        rows: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      rows: convertData(this.state.data)\n    })\n  }\n\n  handleClick = (row) => {\n    this.setState({open: true, row: row});\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Nom</TableCell>\n              <TableCell align=\"right\">Type de capteur</TableCell>\n              <TableCell align=\"right\">Valeur de glucose</TableCell>\n              <TableCell align=\"right\">% batterie</TableCell>\n              <TableCell align=\"right\">Mesur√© le</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow key={row.id} className={classes.tableRow} onClick={() => this.handleClick(row)}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.sensor}</TableCell>\n                <TableCell align=\"right\">{row.sgv}</TableCell>\n                <TableCell align=\"right\">{row.battery}</TableCell>\n                <TableCell align=\"right\">{row.lastTime}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        <ModalComponent open={this.state.open} handleOpen={this.handleOpen} handleClose={this.handleClose} sensorData={this.state.row}/>\n      </Paper>\n    );\n  }\n}\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst SimpleTableWrapped = withStyles(styles)(SimpleTable);\n\nexport default SimpleTableWrapped;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAGA;AACA;AACA;AACA;AADA;AAFA;AATA;AAAA;AACA;AAiBA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmBA;AAAA;AAAA;AAAA;AACA;AACA;AArBA;AAuBA;AAAA;AAAA;AACA;AACA;AAzBA;AA2BA;AAAA;AAAA;AACA;AACA;AA3BA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AANA;AAFA;AAUA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AAccA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAjEA;AACA;AAmEA;AACA;AADA;AAIA;AAEA;;;;A","sourceRoot":""}