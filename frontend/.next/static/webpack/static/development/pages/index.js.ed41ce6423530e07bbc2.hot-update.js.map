{"version":3,"file":"static/webpack/static/development/pages/index.js.ed41ce6423530e07bbc2.hot-update.js","sources":["webpack:///./components/ModalComponent.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, ReferenceLine,\n  ReferenceDot, Tooltip, CartesianGrid, Legend, Brush, ErrorBar, AreaChart, Area,\n  Label, LabelList } from 'recharts';\nimport { scalePow, scaleLog } from 'd3-scale';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n});\n\nconst data = [\n  { name: 'Page A', uv: 1000, pv: 2400, amt: 2400, uvError: [75, 20] },\n  { name: 'Page B', uv: 300, pv: 4567, amt: 2400, uvError: [90, 40] },\n  { name: 'Page C', uv: 280, pv: 1398, amt: 2400, uvError: 40 },\n  { name: 'Page D', uv: 200, pv: 9800, amt: 2400, uvError: 20 },\n  { name: 'Page E', uv: 278, pv: null, amt: 2400, uvError: 28 },\n  { name: 'Page F', uv: 189, pv: 4800, amt: 2400, uvError: [90, 20] },\n  { name: 'Page G', uv: 189, pv: 4800, amt: 2400, uvError: [28, 40] },\n  { name: 'Page H', uv: 189, pv: 4800, amt: 2400, uvError: 28 },\n  { name: 'Page I', uv: 189, pv: 4800, amt: 2400, uvError: 28 },\n  { name: 'Page J', uv: 189, pv: 4800, amt: 2400, uvError: [15, 60] },\n];\n\nclass SimpleModal extends React.Component {\n\n  // handleOpen = () => {\n  //   this.setState({ open: true });\n  // };\n\n  // handleClose = () => {\n  //   this.setState({ open: false });\n  // };\n\n  render() {\n    const { classes, sensorData } = this.props;\n\n    if (!sensorData._id) {\n      return null;\n    } else {\n      return (\n        <div>\n          <Modal\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            open={this.props.open}\n            onClose={this.props.handleClose}\n          >\n            <div style={getModalStyle()} className={classes.paper}>\n              <Typography variant=\"h6\" id=\"modal-title\">\n                {sensorData.name}\n              </Typography>\n\n                Sensor device: {sensorData.latestReading.device}\n\n              <LineChart\n                  width={400}\n                  height={400}\n                  data={data}\n                  margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n                  >\n                  <XAxis dataKey=\"name\" />\n                  <Tooltip />\n                  <CartesianGrid stroke=\"#f5f5f5\" />\n                  <ReferenceLine y={300} label=\"Min\" stroke=\"red\" />\n                  <ReferenceLine y={600} label=\"Max\" stroke=\"red\" />\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" yAxisId={0} />\n                  <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#387908\" yAxisId={1} />\n              </LineChart>\n            </div>\n          </Modal>\n        </div>\n      );\n    }\n\n  }\n}\n\nSimpleModal.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// We need an intermediary variable for handling the recursive nesting.\nconst SimpleModalWrapped = withStyles(styles)(SimpleModal);\n\nexport default SimpleModalWrapped;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;;;;AAnDA;AACA;AAqDA;AACA;AADA;AACA;AAIA;AAEA;;;;A","sourceRoot":""}